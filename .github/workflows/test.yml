name: Test and Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "test-and-coverage"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-test.txt
          pip install -e .

      - name: Create .env.test file
        run: |
          cp tests/.env.test.template tests/.env.test
          sed -i "s|QDRANT_URL=.*|QDRANT_URL=${{ secrets.QDRANT_URL }}|g" tests/.env.test
          sed -i "s|QDRANT_API_KEY=.*|QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}|g" tests/.env.test
          sed -i "s|QDRANT_COLLECTION_NAME=.*|QDRANT_COLLECTION_NAME=${{ secrets.QDRANT_COLLECTION_NAME }}|g" tests/.env.test
          sed -i "s|OPENAI_API_KEY=.*|OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}|g" tests/.env.test
          sed -i "s|CONFLUENCE_EMAIL=.*|CONFLUENCE_EMAIL=${{ secrets.CONFLUENCE_EMAIL }}|g" tests/.env.test
          sed -i "s|CONFLUENCE_API_TOKEN=.*|CONFLUENCE_API_TOKEN=${{ secrets.CONFLUENCE_API_TOKEN }}|g" tests/.env.test
          sed -i "s|AUTH_TEST_REPO_TOKEN=.*|AUTH_TEST_REPO_TOKEN=${{ secrets.AUTH_TEST_REPO_TOKEN }}|g" tests/.env.test
          sed -i "s|JIRA_TOKEN=.*|JIRA_TOKEN=${{ secrets.JIRA_TOKEN }}|g" tests/.env.test
          sed -i "s|JIRA_EMAIL=.*|JIRA_EMAIL=${{ secrets.JIRA_EMAIL }}|g" tests/.env.test
          sed -i "s|CONFLUENCE_TOKEN=.*|CONFLUENCE_TOKEN=${{ secrets.CONFLUENCE_API_TOKEN }}|g" tests/.env.test
          sed -i "s|CONFLUENCE_EMAIL=.*|CONFLUENCE_EMAIL=${{ secrets.CONFLUENCE_EMAIL }}|g" tests/.env.test
          sed -i "s|GITHUB_TOKEN=.*|GITHUB_TOKEN=${{ secrets.AUTH_TEST_REPO_TOKEN }}|g" tests/.env.test


      - name: Create config.test.yaml file
        run: |
          cp tests/config.test.template.yaml tests/config.test.yaml
          # More specific sed commands for Confluence
          sed -i "s|url: \"CONFLUENCE_URL_PLACEHOLDER\"|url: \"${{ secrets.CONFLUENCE_URL }}\"|g" tests/config.test.yaml
          sed -i "s|space_key: \"CONFLUENCE_SPACE_KEY_PLACEHOLDER\"|space_key: \"${{ secrets.CONFLUENCE_SPACE_KEY }}\"|g" tests/config.test.yaml
          
          # More specific sed commands for Jira
          sed -i "s|base_url: \"JIRA_URL_PLACEHOLDER\"|base_url: \"${{ secrets.JIRA_URL }}\"|g" tests/config.test.yaml
          sed -i "s|project_key: \"JIRA_PROJECT_KEY_PLACEHOLDER\"|project_key: \"${{ secrets.JIRA_PROJECT_KEY }}\"|g" tests/config.test.yaml
          
      - name: Verify config file
        run: |
          echo "Content of config.test.yaml:"
          cat tests/config.test.yaml

      - name: Run tests and generate coverage reports
        run: |
          python -m pytest tests/ --cov=qdrant_loader --cov-report=html -v --log-cli-level=DEBUG --capture=no --full-trace

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload coverage artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: htmlcov

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
